// run-rustfix

fn main() {
    let mut x = vec![1usize];
    *x.last_mut().unwrap() = 2;
    //~^ ERROR invalid left-hand side of assignment
    *x.last_mut().unwrap() += 1;
    //~^ ERROR binary assignment operation `+=` cannot be applied to type `&mut usize`

    let y = x.last_mut().unwrap();
    *y = 2;
    //~^ ERROR mismatched types
    *y += 1;
    //~^ ERROR binary assignment operation `+=` cannot be applied to type `&mut usize`
}

// ferrocene-annotations: fls_3ut3biyra4r9
// Assignee Expressions
//
// ferrocene-annotations: fls_lv7w7aalpwm5
// Type Inference
//
// ferrocene-annotations: fls_exe4zodlwfez
// Type Unification
